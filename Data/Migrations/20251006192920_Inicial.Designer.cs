// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(TPIContext))]
    [Migration("20251006192920_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Model.Comision", b =>
                {
                    b.Property<int>("IdComision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComision"));

                    b.Property<int>("AnioEspecialidad")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdPlan")
                        .HasColumnType("int");

                    b.HasKey("IdComision");

                    b.HasIndex("IdComision")
                        .IsUnique();

                    b.HasIndex("IdPlan");

                    b.ToTable("Comisiones");
                });

            modelBuilder.Entity("Domain.Model.Curso", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurso"));

                    b.Property<int>("AnioCalendario")
                        .HasColumnType("int");

                    b.Property<int>("Cupo")
                        .HasColumnType("int");

                    b.Property<int>("IdComision")
                        .HasColumnType("int");

                    b.Property<int>("IdMateria")
                        .HasColumnType("int");

                    b.HasKey("IdCurso");

                    b.HasIndex("IdComision");

                    b.HasIndex("IdMateria");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Especialidad", b =>
                {
                    b.Property<int>("IdEspecialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspecialidad"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(360)
                        .HasColumnType("nvarchar(360)");

                    b.HasKey("IdEspecialidad");

                    b.HasIndex("IdEspecialidad")
                        .IsUnique();

                    b.ToTable("Especialidades");

                    b.HasData(
                        new
                        {
                            IdEspecialidad = 1,
                            Descripcion = "Especialidad"
                        });
                });

            modelBuilder.Entity("Domain.Model.Materia", b =>
                {
                    b.Property<int>("IdMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("HsSemanales")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<int>("HsTotales")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<int>("IdPlan")
                        .HasColumnType("int");

                    b.HasKey("IdMateria");

                    b.HasIndex("IdMateria")
                        .IsUnique();

                    b.HasIndex("IdPlan");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("Domain.Model.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPlan")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<int>("Legajo")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdPersona")
                        .IsUnique();

                    b.HasIndex("IdPlan");

                    b.ToTable("Personas");

                    b.HasData(
                        new
                        {
                            IdPersona = 1,
                            Apellido = "Admin",
                            Direccion = "Admin 123",
                            Email = "admin@gmail.com",
                            FechaNacimiento = new DateTime(2004, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPlan = 1,
                            Legajo = 1234,
                            Telefono = "3419999999",
                            TipoPersona = "no se"
                        });
                });

            modelBuilder.Entity("Domain.Model.Plan", b =>
                {
                    b.Property<int>("IdPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlan"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(360)
                        .HasColumnType("nvarchar(360)");

                    b.Property<int>("IdEspecialidad")
                        .HasColumnType("int");

                    b.HasKey("IdPlan");

                    b.HasIndex("IdEspecialidad");

                    b.HasIndex("IdPlan")
                        .IsUnique();

                    b.ToTable("Planes");

                    b.HasData(
                        new
                        {
                            IdPlan = 1,
                            Descripcion = "Plan básico",
                            IdEspecialidad = 1
                        });
                });

            modelBuilder.Entity("Domain.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("CambiaClave")
                        .HasColumnType("bit");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Apellido = "Admin",
                            CambiaClave = false,
                            Clave = "1234",
                            Email = "admin@gmail.com",
                            Habilitado = true,
                            IdPersona = 1,
                            Nombre = "Admin",
                            NombreUsuario = "admin"
                        });
                });

            modelBuilder.Entity("Domain.Model.Comision", b =>
                {
                    b.HasOne("Domain.Model.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Domain.Model.Curso", b =>
                {
                    b.HasOne("Domain.Model.Comision", "Comision")
                        .WithMany()
                        .HasForeignKey("IdComision")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Model.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("IdMateria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comision");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("Domain.Model.Materia", b =>
                {
                    b.HasOne("Domain.Model.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Domain.Model.Persona", b =>
                {
                    b.HasOne("Domain.Model.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Domain.Model.Plan", b =>
                {
                    b.HasOne("Domain.Model.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("IdEspecialidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidad");
                });

            modelBuilder.Entity("Domain.Model.Usuario", b =>
                {
                    b.HasOne("Domain.Model.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });
#pragma warning restore 612, 618
        }
    }
}
